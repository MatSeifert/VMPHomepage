<?php
// wcf imports
if (!defined('NO_IMPORTS')) {
	require_once(WCF_DIR.'lib/system/io/File.class.php');
	require_once(WCF_DIR.'lib/system/language/Language.class.php');
}

/**
 * SetupLanguage is a modification of Language only for the setup process.  
 * 
 * @author	Marcel Werk
 * @copyright	2001-2009 WoltLab GmbH
 * @license	GNU Lesser General Public License <http://opensource.org/licenses/lgpl-license.php>
 * @package	com.woltlab.wcf
 * @subpackage	system.language
 * @category 	Community Framework
 */
class SetupLanguage extends Language {
	protected $languageLoaded = false;

	/**
	 * Creates a new SetupLanguage object.
	 * 
	 * @param	string		$languageCode
	 * @param	string		$characterEncoding
	 */
	public function __construct($languageCode, $characterEncoding) {
		$this->data['languageEncoding'] = $characterEncoding;
		$this->data['languageCode'] = $languageCode;
		
		$this->init();
	}
	
	protected function loadCategory($category) {
		return false;
	}

	/**
	 * Loads the compiled language file.
	 * Compiles the language file before if necessary.
	 */
	public function loadLanguage() {
		$this->languageLoaded = true;
		$filename = TMP_DIR.TMP_FILE_PREFIX.$this->data['languageCode'].'_'.$this->data['languageEncoding'].'_wcf.setup.php';
		
		if (!file_exists($filename)) {
			$xml = new XML(TMP_DIR.TMP_FILE_PREFIX.'setup_'.$this->data['languageCode'].'.xml');
			
			// compile an array with XML::getElementTree
			$languageXML = $xml->getElementTree('language');

			// extract attributes (language code, language name)
			//$languageXML = array_merge($languageXML, $languageXML['attrs']);

			// get language items
			$categoriesToCache = array();
			foreach ($languageXML['children'] as $key => $languageCategory) {
				// language category does not exist yet, create it
				if (isset($languageCategory['children'])) {
					foreach ($languageCategory['children'] as $key2 => $languageitem) {
						$categoriesToCache[] = array( 'name' => $languageitem['attrs']['name'], 'cdata' => $languageitem['cdata']);
					}
				}
			}

			// update language files here
			if (count($categoriesToCache) > 0) {
				$file = new File($filename);
				$file->write("<?php\n/**\n* WoltLab Community Framework\n* language: ".$this->data['languageCode']."\n* encoding: ".$this->data['languageEncoding']."\n* category: WCF Setup\n* generated at ".gmdate("r")."\n* \n* DO NOT EDIT THIS FILE\n*/\n");
				foreach ($categoriesToCache as $value => $name) {
					// simple_xml returns values always UTF-8 encoded
					// manual decoding to charset necessary
					if ($this->data['languageEncoding'] != 'UTF-8') {
						$name['cdata'] = StringUtil::convertEncoding('UTF-8', $this->data['languageEncoding'], $name['cdata']);
					}
					$file->write("\$this->items[\$this->languageID]['".$name['name']."'] = '".str_replace("'", "\'", $name['cdata'])."';\n");
					
					// compile dynamic language variables
					if (strpos($name['cdata'], '{') !== false) {
						$file->write("\$this->dynamicItems[\$this->languageID]['".$name['name']."'] = '".str_replace("'", "\'", self::getScriptingCompiler()->compileString($name['name'], $name['cdata']))."';\n");
					}
				}
		
				$file->write("?>");
				$file->close();
			}
		}

		include_once($filename);
		$this->setLocale();
	}
	
	/**
	 * @see Language::setLocale()
	 */
	public function setLocale() {
		if (count($this->items)) {
			parent::setLocale();
		}
	}
}
?>