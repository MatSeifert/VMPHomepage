<?php
/**
* WoltLab Community Framework
* Template: avatarEdit
* Compiled at: Sun, 08 Jun 2014 21:37:23 +0000
* 
* DO NOT EDIT THIS FILE
*/
$this->v['tpl']['template'] = 'avatarEdit';
?>
<?php
if (!isset($this->pluginObjects['TemplatePluginModifierFilesize'])) {
require_once(WCF_DIR.'lib/system/template/plugin/TemplatePluginModifierFilesize.class.php');
$this->pluginObjects['TemplatePluginModifierFilesize'] = new TemplatePluginModifierFilesize;
}
if (!isset($this->pluginObjects['TemplatePluginFunctionPages'])) {
require_once(WCF_DIR.'lib/system/template/plugin/TemplatePluginFunctionPages.class.php');
$this->pluginObjects['TemplatePluginFunctionPages'] = new TemplatePluginFunctionPages;
}
if (!isset($this->pluginObjects['TemplatePluginModifierConcat'])) {
require_once(WCF_DIR.'lib/system/template/plugin/TemplatePluginModifierConcat.class.php');
$this->pluginObjects['TemplatePluginModifierConcat'] = new TemplatePluginModifierConcat;
}
?><?php
$outerTemplateName8f692f33500a1fd58b1eee719f1d5d1beeeee417 = $this->v['tpl']['template'];
$this->includeTemplate("documentHeader", array(), (1 ? 1 : 0));
$this->v['tpl']['template'] = $outerTemplateName8f692f33500a1fd58b1eee719f1d5d1beeeee417;
$this->v['tpl']['includedTemplates']["documentHeader"] = 1;
?>
<head>
	<title>Avatar - Profil bearbeiten - <?php $this->tagStack[] = array('lang', array()); ob_start(); ?><?php echo StringUtil::encodeHTML(PAGE_TITLE); ?><?php $_langacccab7f32c2004f8354f4bdda55cb2eaa446063 = ob_get_contents(); ob_end_clean(); echo WCF::getLanguage()->getDynamicVariable($_langacccab7f32c2004f8354f4bdda55cb2eaa446063, $this->tagStack[count($this->tagStack) - 1][1]); array_pop($this->tagStack); ?></title>
	<?php
$outerTemplateName9f663d359069fa850e916e81913c50381f2e5e64 = $this->v['tpl']['template'];
$this->includeTemplate('headInclude', array(), (false ? 1 : 0));
$this->v['tpl']['template'] = $outerTemplateName9f663d359069fa850e916e81913c50381f2e5e64;
$this->v['tpl']['includedTemplates']['headInclude'] = 1;
?>
	<script type="text/javascript" src="<?php echo RELATIVE_WCF_DIR; ?>js/MultiPagesLinks.class.js"></script>
</head>
<body<?php if (isset($this->v['templateName'])) { ?> id="tpl<?php echo StringUtil::encodeHTML(ucfirst($this->v['templateName'])); ?>"<?php } ?>>
<?php
$outerTemplateName76f64601ee506b08ddcb280624ec5a158bc9a348 = $this->v['tpl']['template'];
$this->includeTemplate('header', array(), (false ? 1 : 0));
$this->v['tpl']['template'] = $outerTemplateName76f64601ee506b08ddcb280624ec5a158bc9a348;
$this->v['tpl']['includedTemplates']['header'] = 1;
?>

<div id="main">
	
	<?php ob_start(); ?>
		<?php if ($this->v['errorField']) { ?>
			<p class="error">Ihre Angaben sind ungültig. Bitte überprüfen Sie die markierten Eingabefelder.</p>
		<?php } ?>
		
		<?php if ($this->v['disableAvatar']) { ?>
			<p class="error">Der Administrator hat<?php if ($this->v['avatarID'] != 0) { ?> Ihren derzeitigen Avatar gesperrt und<?php } ?> Ihnen die weitere Nutzungberechtigung der Avatar-Funktion <?php if ( ! $this->v['this']->user->disableAvatarReason) { ?>entzogen.<?php } else { ?> aus folgenden Gründen entzogen: <?php echo StringUtil::encodeHTML($this->v['this']->user->disableAvatarReason); ?><?php } ?></p>
		<?php } ?>
		
		<?php if (isset($this->v['success'])) { ?>
			<p class="success">Ihr Auswahl wurde erfolgreich gespeichert.</p>
		<?php } ?>
	<?php
$this->v['tpl']['capture']['default'] = ob_get_contents();
ob_end_clean();
$this->append('userMessages', $this->v['tpl']['capture']['default']);
?>
	
	<?php
$outerTemplateName654fbf5f6023eb88413287dc68fd670c94fcb030 = $this->v['tpl']['template'];
$this->includeTemplate("userCPHeader", array(), (1 ? 1 : 0));
$this->v['tpl']['template'] = $outerTemplateName654fbf5f6023eb88413287dc68fd670c94fcb030;
$this->v['tpl']['includedTemplates']["userCPHeader"] = 1;
?>
	
	
	<div class="border">
		<div class="layout-3">
			<div class="columnContainer">
				<div class="container-3 column first sidebar avatarSelectSidebar">
					<div class="columnInner">
						<div class="contentBox">
							<h3 class="subHeadline">Aktueller Avatar</h3>
							<div class="avatarShow">
								<?php if ($this->v['currentAvatar']) { ?>
									<img src="<?php echo StringUtil::encodeHTML($this->v['currentAvatar']->getURL()); ?>" alt="" id="currentAvatar" />
								<?php } else { ?>
									<img src="<?php echo RELATIVE_WCF_DIR; ?>images/avatars/avatar-default.png" alt="" id="currentAvatar" />
								<?php } ?>
								<img src="<?php echo RELATIVE_WCF_DIR; ?>images/avatars/avatar-default.png" alt="" id="defaultAvatar" class="hidden" />
							</div>
							<div class="buttonBar">
								<div class="smallButtons">
									<ul>
										<?php if ($this->v['this']->user->getPermission('user.profile.avatar.canUploadAvatar')) { ?>
											<li>
												<a href="index.php?form=AvatarEdit&userAvatar=1<?php echo SID_ARG_2ND; ?>" title="Eigener Avatar"><img src="<?php echo StyleManager::getStyle()->getIconPath('addS.png'); ?>" alt="" /> <span>Eigener Avatar</span></a>
											</li>
										<?php } ?>
										<?php if ($this->v['currentAvatar'] &&  ! $this->v['disableAvatar']) { ?>
											<li>
												<a href="index.php?action=AvatarDelete&amp;t=<?php echo SECURITY_TOKEN; ?><?php echo SID_ARG_2ND; ?>" id="avatarDeleteButton" title="Avatar löschen"><img src="<?php echo StyleManager::getStyle()->getIconPath('deleteS.png'); ?>" alt="" /> <span>Avatar löschen</span></a>
												<script type="text/javascript">
													//<![CDATA[
													$('avatarDeleteButton').observe('click', function(evt) {
														var a = evt.findElement();
														if (confirm('Möchten Sie Ihren aktuellen Avatar wirklich löschen?')) {
															var ajaxRequest = new AjaxRequest();
															ajaxRequest.openPost(a.href.gsub('&nbsp;', '&') + '&ajax=1');
															a.up('li').hide();
															$('currentAvatar').hide();
															$('defaultAvatar').removeClassName('hidden');
														}
														evt.stop();
													});
													//]]>
												</script>
											</li>
										<?php } ?>
									</ul>
								</div>
							</div>
						</div>
						<?php if ($this->v['this']->user->getPermission('user.profile.avatar.canUseDefaultAvatar') && (count($this->v['avatarCategories']) || $this->v['hasDefaultAvatars'])) { ?>
							<div class="contentBox">
								<h3 class="subHeadline">Vorgegebene Avatare</h3>
								<ul class="itemList">
									<?php if ($this->v['hasDefaultAvatars']) { ?>
										<li>
											<h4 class="itemListTitle">
												<img src="<?php echo StyleManager::getStyle()->getIconPath('categoryS.png'); ?>" />
												<?php if ( ! $this->v['userAvatar'] &&  ! $this->v['avatarCategoryID']) { ?>
													Standard-Avatare
												<?php } else { ?>
													<a href="index.php?form=AvatarEdit&amp;userAvatar=0&amp;avatarCategoryID=0&amp;pageNo=<?php echo $this->v['pageNo']; ?><?php echo SID_ARG_2ND; ?>">Standard-Avatare</a>
												<?php } ?>
											</h4>
										</li>
									<?php } ?>
									<?php
if (count($this->v['avatarCategories']) > 0) {
foreach ($this->v['avatarCategories'] as $this->v["categoryID"] => $this->v["category"]) {
?>
										<li>
											<h4 class="itemListTitle">
												<img src="<?php echo StyleManager::getStyle()->getIconPath('categoryS.png'); ?>" />
												<?php if ( ! $this->v['userAvatar'] && $this->v['avatarCategoryID'] == $this->v['categoryID']) { ?>
													<?php $this->tagStack[] = array('lang', array()); ob_start(); ?><?php echo StringUtil::encodeHTML($this->v['category']); ?><?php $_langff643439ead7f33c65c26bab013cc7bd8998557b = ob_get_contents(); ob_end_clean(); echo WCF::getLanguage()->getDynamicVariable($_langff643439ead7f33c65c26bab013cc7bd8998557b, $this->tagStack[count($this->tagStack) - 1][1]); array_pop($this->tagStack); ?>
												<?php } else { ?>
													<a href="index.php?form=AvatarEdit&amp;userAvatar=0&amp;avatarCategoryID=<?php echo $this->v['categoryID']; ?>&amp;pageNo=<?php echo $this->v['pageNo']; ?><?php echo SID_ARG_2ND; ?>"><?php $this->tagStack[] = array('lang', array()); ob_start(); ?><?php echo StringUtil::encodeHTML($this->v['category']); ?><?php $_lang6138380c020932828c453193c6799f1c86c334a2 = ob_get_contents(); ob_end_clean(); echo WCF::getLanguage()->getDynamicVariable($_lang6138380c020932828c453193c6799f1c86c334a2, $this->tagStack[count($this->tagStack) - 1][1]); array_pop($this->tagStack); ?></a>
												<?php } ?>
											</h4>
										</li>
									<?php } } ?>
								</ul>
							</div>
						<?php } ?>
					</div>
				</div>
				<div class="container-1 column second">
					<div class="columnInner">
						<form method="post" enctype="multipart/form-data" action="index.php?form=AvatarEdit">
							<h3 class="subHeadline"><?php $this->tagStack[] = array('lang', array()); ob_start(); ?><?php if ($this->v['userAvatar']) { ?>wcf.user.avatar.ownAvatar<?php } else { ?><?php if ($this->v['avatarCategoryID']) { ?><?php echo StringUtil::encodeHTML($this->v['avatarCategory']->title); ?><?php } else { ?>wcf.user.avatar.category.default<?php } ?><?php } ?><?php $_langcf1a059186189648908f4860d556ab6852ca37e2 = ob_get_contents(); ob_end_clean(); echo WCF::getLanguage()->getDynamicVariable($_langcf1a059186189648908f4860d556ab6852ca37e2, $this->tagStack[count($this->tagStack) - 1][1]); array_pop($this->tagStack); ?></h3>
							
							<?php if ($this->v['this']->user->getPermission('user.profile.avatar.canUploadAvatar') && $this->v['userAvatar']) { ?>
							
								<script type="text/javascript">
									//<![CDATA[
									document.observe('dom:loaded', function() {
										$('avatarUpload').observe('keyup', checkInput).observe('change', checkInput);
										$('avatarURL').observe('keyup', checkInput).observe('focus', checkInput).observe('blur', checkInput);
										var urlValue = $('avatarURL').value;
										if ($('gravatar')) {
											$('gravatar').observe('keyup', checkInput).observe('focus', checkInput).observe('blur', checkInput);
											var gravatarValue = $('gravatar').value;
										}
										else {
											var gravatarValue = null;
										}
										<?php if ($this->v['errorField'] == 'avatarURL' || $this->v['avatarType'] == 'gravatar') { ?>checkInput(<?php if ($this->v['errorField'] == 'avatarURL') { ?>$('avatarURL')<?php } elseif ($this->v['avatarType'] == 'gravatar') { ?>$('gravatar')<?php } ?>);<?php } ?>
									
										function checkInput(element) {
											// if it is not a normal element, it must be an event object
											if (!(!!element && element.nodeType === 1)) {
												element = element.findElement();
												var init = false;
											}
											else {
													
												var init = true;
											}
											
											switch (element.identify()) {
												case 'avatarURL':
													if (urlValue != $('avatarURL').value || init) {
														urlValue = $('avatarURL').value;
														if ($('avatarURL').value != '' && $('avatarURL').value != 'http://') {
															disableOptions('avatarUpload', 'gravatar');
														}
														else {
															enableOptions('avatarUpload', 'gravatar');
														}
													}
													break;
												case 'gravatar':
													if (gravatarValue != $('gravatar').value || init) {
														gravatarValue = $('gravatar').value;
														if ($('gravatar').value != '') {
															disableOptions('avatarUpload', 'avatarURL');
														}
														else {
															enableOptions('avatarUpload', 'avatarURL');
														}
													}
													break;
											}
										}
									});
									//]]>
								</script>
								
								<p class="info">Eigene Avatare dürfen die Dateiendungen gif, jpg, jpeg und png und maximal eine Größe von <?php echo StringUtil::formatNumeric($this->v['this']->user->getPermission('user.profile.avatar.maxWidth')); ?>*<?php echo StringUtil::formatNumeric($this->v['this']->user->getPermission('user.profile.avatar.maxHeight')); ?> Pixel und <?php echo $this->pluginObjects['TemplatePluginModifierFilesize']->execute(array($this->v['this']->user->getPermission('user.profile.avatar.maxSize')), $this); ?> besitzen. Größere Avatare werden automatisch auf die Maximalgröße verkleinert.</p>		
								<div class="formElement<?php if ($this->v['errorField'] == 'avatarUpload') { ?> formError<?php } ?>" id="avatarUploadDiv">
									<div class="formFieldLabel">
										<label for="avatarUpload">Avatar hochladen</label>
									</div>
									<div class="formField">
										<input type="file" name="avatarUpload" value="" id="avatarUpload" />
										<?php if ($this->v['errorField'] == 'avatarUpload') { ?>
											<p class="innerError">
												<?php if ($this->v['errorType'] == 'empty') { ?>Bitte füllen Sie dieses Eingabefeld aus.<?php } ?>
												<?php if ($this->v['errorType'] == 'uploadFailed') { ?>Das Hochladen der Datei ist fehlgeschlagen.<?php } ?>
												<?php if ($this->v['errorType'] == 'badAvatar') { ?>Sie haben ein beschädigtes Bild ausgewählt.<?php } ?>
												<?php if ($this->v['errorType'] == 'notAllowedExtension') { ?>Das ausgewählte Bild besitzt eine ungültige Dateiendung. Die erlaubten Dateiendungen sind gif, jpg, jpeg und png.<?php } ?>
												<?php if ($this->v['errorType'] == 'tooLarge') { ?>Das ausgewählte Bild überschreitet die erlaubte Maximalgröße. Die maximale Größe liegt bei <?php echo StringUtil::formatNumeric($this->v['this']->user->getPermission('user.profile.avatar.maxWidth')); ?>*<?php echo StringUtil::formatNumeric($this->v['this']->user->getPermission('user.profile.avatar.maxHeight')); ?> Pixeln und <?php echo $this->pluginObjects['TemplatePluginModifierFilesize']->execute(array($this->v['this']->user->getPermission('user.profile.avatar.maxSize')), $this); ?>.<?php } ?>
												<?php if ($this->v['errorType'] == 'copyFailed') { ?>Der Avatar konnte nicht zum endgültigen Speicherort kopiert werden. Es liegt vermutlich ein Systemfehler vor.<?php } ?>
											</p>
										<?php } ?>
									</div>
								</div>
								<div class="formElement<?php if ($this->v['errorField'] == 'avatarURL') { ?> formError<?php } ?>" id="avatarURLDiv">
									<div class="formFieldLabel">
										<label for="avatarURL">Avatar herunterladen</label>
									</div>
									<div class="formField">
										<input type="text" class="inputText" name="avatarURL" value="<?php echo StringUtil::encodeHTML($this->v['avatarURL']); ?>" id="avatarURL" />
										<?php if ($this->v['errorField'] == 'avatarURL') { ?>
											<p class="innerError">
												<?php if ($this->v['errorType'] == 'empty') { ?>Bitte füllen Sie dieses Eingabefeld aus.<?php } ?>
												<?php if ($this->v['errorType'] == 'downloadFailed') { ?>Das Herunterladen der Datei ist fehlgeschlagen. Die angegebene Adresse (URL) ist vermutlich nicht korrekt.<?php } ?>
												<?php if ($this->v['errorType'] == 'badAvatar') { ?>Sie haben ein beschädigtes Bild ausgewählt.<?php } ?>
												<?php if ($this->v['errorType'] == 'notAllowedExtension') { ?>Das ausgewählte Bild besitzt eine ungültige Dateiendung. Die erlaubten Dateiendungen sind gif, jpg, jpeg und png.<?php } ?>
												<?php if ($this->v['errorType'] == 'tooLarge') { ?>Das ausgewählte Bild überschreitet die erlaubte Maximalgröße. Die maximale Größe liegt bei <?php echo StringUtil::formatNumeric($this->v['this']->user->getPermission('user.profile.avatar.maxWidth')); ?>*<?php echo StringUtil::formatNumeric($this->v['this']->user->getPermission('user.profile.avatar.maxHeight')); ?> Pixeln und <?php echo $this->pluginObjects['TemplatePluginModifierFilesize']->execute(array($this->v['this']->user->getPermission('user.profile.avatar.maxSize')), $this); ?>.<?php } ?>
												<?php if ($this->v['errorType'] == 'copyFailed') { ?>Der Avatar konnte nicht zum endgültigen Speicherort kopiert werden. Es liegt vermutlich ein Systemfehler vor.<?php } ?>
											</p>
										<?php } ?>
									</div>
								</div>
								<?php if (MODULE_GRAVATAR == 1) { ?>
									<div class="formElement<?php if ($this->v['errorField'] == 'gravatar') { ?> formError<?php } ?>" id="gravatarDiv">
										<div class="formFieldLabel">
											<label for="gravatar">Gravatar</label>
										</div>
										<div class="formField">
											<input type="text" class="inputText" name="gravatar" value="<?php echo StringUtil::encodeHTML($this->v['gravatar']); ?>" id="gravatar" />
											<?php if ($this->v['errorField'] == 'gravatar') { ?>
												<p class="innerError">
													<?php if ($this->v['errorType'] == 'empty') { ?>Bitte füllen Sie dieses Eingabefeld aus.<?php } ?>
												</p>
											<?php } ?>
										</div>
										<p class="formFieldDesc">Bei einem Gravatar handelt es sich um einen global verfügbaren Avatar (Global Recognized Avatar), welcher mit Ihrer E-Mail-Adresse verknüpft ist. Auf der folgenden Website können Sie einen Gravatar anlegen: <a href="http://www.gravatar.com" class="externalURL">www.gravatar.com</a></p>
									</div>
								<?php } ?>
							<?php } ?>
							
							<?php if ( ! $this->v['userAvatar'] && $this->v['this']->user->getPermission('user.profile.avatar.canUseDefaultAvatar')) { ?>
								<div class="contentHeader">
									<?php echo $this->pluginObjects['TemplatePluginFunctionPages']->execute(array('print' => true, 'assign' => 'pagesOutput', 'link' => $this->pluginObjects['TemplatePluginModifierConcat']->execute(array("index.php?form=AvatarEdit&userAvatar=0&avatarCategoryID={$this->v['avatarCategoryID']}&pageNo=%d",SID_ARG_2ND_NOT_ENCODED,'#availableAvatars'), $this)), $this); ?>
								</div>
								<div class="avatarSelect">
									<ul>
									<?php
if (count($this->v['avatars']) > 0) {
foreach ($this->v['avatars'] as $this->v['avatar']) {
?>
										<li class="container-4 <?php if ($this->v['avatarID'] == $this->v['avatar']->avatarID) { ?>selected<?php } ?>">
											<label>
												<input onclick="if (IS_SAFARI) disableOptions('avatarUpload', 'avatarURL')" onfocus="disableOptions('avatarUpload', 'avatarURL')" type="radio" name="avatarID" value="<?php echo $this->v['avatar']->avatarID; ?>"<?php if ($this->v['avatarID'] == $this->v['avatar']->avatarID) { ?> checked="checked"<?php } ?> />
												<img src="<?php echo $this->v['avatar']->getURL(); ?>" alt="" style="width: <?php echo $this->v['avatar']->width; ?>px; height: <?php echo $this->v['avatar']->height; ?>px; margin-top: -<?php echo intval($this->v['avatar']->height/2); ?>px; margin-left: -<?php echo intval($this->v['avatar']->width/2); ?>px" />
											</label>
										</li>
									<?php } } ?>
									</ul>
								</div>
								
								<div class="contentFooter">
									<?php echo $this->v['pagesOutput']; ?>
								</div>
								
								<?php if ($this->v['errorField'] == 'availableAvatars') { ?>
									<div class="formError">
										<p class="innerError">
											<?php if ($this->v['errorType'] == 'invalid') { ?>Sie haben ein ungültigen Avatar ausgewählt.<?php } ?>
										</p>
									</div>
								<?php } ?>
								
								<input type="hidden" name="pageNo" value="<?php echo $this->v['pageNo']; ?>" />
								<input type="hidden" name="avatarCategoryID" value="<?php echo $this->v['avatarCategoryID']; ?>" />
							<?php } ?>
							
							<?php echo SID_INPUT_TAG; ?>
							<?php if ( ! $this->v['disableAvatar']) { ?>
								<div class="formSubmit">
									<input type="submit" accesskey="s" value="Absenden" />
									<input type="reset" accesskey="r" value="Zurücksetzen" />
								</div>
							<?php } ?>
						</form>
					</div>
				</div>
			</div>
		</div>
	</div>
</div>

<?php
$outerTemplateNamea77ee002fa821871480e776537cca78a719a351b = $this->v['tpl']['template'];
$this->includeTemplate('footer', array(), (false ? 1 : 0));
$this->v['tpl']['template'] = $outerTemplateNamea77ee002fa821871480e776537cca78a719a351b;
$this->v['tpl']['includedTemplates']['footer'] = 1;
?>
</body>
</html>